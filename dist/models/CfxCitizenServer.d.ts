import { CfxCitizenServerData, CfxCitizenServerDataData } from "../types";
export default class CitizenServer {
    id: string;
    data: CfxCitizenServerDataData;
    constructor(data: CfxCitizenServerData);
    get playersCount(): number;
    get players(): import("../types").CfxCitizenPlayerPayload[];
    get gameType(): string;
    get hostname(): string;
    get mapName(): string;
    get maxPlayers(): number;
    get enhancedHostSupport(): boolean;
    get resources(): string[];
    get serverVersion(): string;
    get publicVariables(): import("../types").CfxCitizenServerDataPublicVariables;
    get playersCountFromServerReport(): number;
    get ownerId(): number;
    get private(): boolean;
    get fallback(): boolean;
    get connectedEndpoints(): string[];
    get upvotePower(): number;
    get burstPower(): number;
    get supported(): string;
    get ownerName(): string;
    get ownerProfileUrl(): string;
    get ownerAvatarUrl(): string;
    get lastSeenDate(): string;
    get iconVersion(): number;
    get isOneSyncEnabled(): boolean;
    get elementClub(): string;
    get tags(): string[];
    get projectName(): string;
    get projectDesc(): string;
    get isFull(): boolean;
    hasResource(resource: string): boolean;
    hasAnyResourceStartingWith(resource: string): boolean;
    hasTag(tag: string): boolean;
    isPlayerOnline(name: string): boolean;
}
